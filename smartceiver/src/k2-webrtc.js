class K2WebRTCConnector{static get id(){return'k2-webrtc'}static get name(){return'K2 remote via WebRTC'}static get capabilities(){return[Remoddle.id]}constructor(){this._options={localVideoEl:'localStream',remoteVideoEl:'remoteStream',autoRequestMedia:!0,enableDataChannels:!0,media:{video:!1,audio:!0},receiveMedia:{offerToReceiveAudio:1,offerToReceiveVideo:0},nick:'operator'}}connect(a,b){let c=new SimpleWebRTC(this._options);c.on('readyToCall',()=>c.joinRoom('k2-om4aa',(d,e)=>{if(d)console.log('connect err: '+d);else{console.log('connect succeed: '+e),c.mute(),c.pauseVideo();let d=new K2WebRTCPort(c);setTimeout(()=>{d.send('SEMICOL1;'),d.send('POWER1;'),setTimeout(()=>{d._startPowerOnTimer(1e4),this._bindCommands(a,d),b(d)},5e3)},3e3)}}))}_bindCommands(a,b){a.bind(EventType.keyDit,this.constructor.id,()=>b.send('.;')),a.bind(EventType.keyDah,this.constructor.id,()=>b.send('-;')),a.bind(EventType.mode,this.constructor.id,(a)=>b.send('MD'+(a.value+1)+';')),a.bind(EventType.freq,this.constructor.id,(a)=>{let c=a.value,d='FA';d+='000',1e7>c&&(d+='0'),d+=c,b.send(d+';')}),a.bind(EventType.wpm,this.constructor.id,(a)=>b.send('KS0'+a.value+';')),a.bind(EventType.filter,this.constructor.id,()=>{}),a.bind(EventType.preamp,this.constructor.id,(a)=>b.send('PA'+(a.value?'1':'0')+';')),a.bind(EventType.attn,this.constructor.id,(a)=>b.send('RA0'+(a.value?'1':'0')+';'))}}class K2WebRTCPort{constructor(a){this._webrtc=a}_startPowerOnTimer(a){this._timer=setInterval(()=>this.send('POWER1;'),a)}send(a){this._webrtc.sendDirectlyToAll('meta','ctl',{msg:a})}disconnect(){clearInterval(this._timer),this.send('POWEROFF;'),this._webrtc.disconnect()}}tcvrConnectors.register(new K2WebRTCConnector);