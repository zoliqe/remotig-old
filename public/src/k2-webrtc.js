class K2WebRTCConnector{static get id(){return"k2-webrtc"}static get name(){return"K2 remote via WebRTC"}static get capabilities(){return[Remoddle.id]}constructor(){this._options={localVideoEl:"localStream",remoteVideoEl:"remoteStream",autoRequestMedia:!0,enableDataChannels:!0,media:{video:!1,audio:!0},receiveMedia:{offerToReceiveAudio:1,offerToReceiveVideo:0},nick:"operator"}}connect(tcvr,successCallback){let webrtc=new SimpleWebRTC(this._options);webrtc.on("readyToCall",()=>webrtc.joinRoom("k2-om4aa",(err,room)=>{if(err){console.log("connect err: "+err)}else{console.log("connect succeed: "+room);webrtc.mute();webrtc.pauseVideo();let port=new K2WebRTCPort(webrtc);setTimeout(()=>{port.send("SEMICOL1;");port.send("POWER1;");setTimeout(()=>{port._startPowerOnTimer(1e4);this._bindCommands(tcvr,port);successCallback(port)},5e3)},3e3)}}))}_bindCommands(tcvr,port){tcvr.bind(EventType.keyDit,this.constructor.id,()=>port.send(".;"));tcvr.bind(EventType.keyDah,this.constructor.id,()=>port.send("-;"));tcvr.bind(EventType.mode,this.constructor.id,event=>port.send("MD"+(event.value+1)+";"));tcvr.bind(EventType.freq,this.constructor.id,event=>{let freq=event.value,data="FA";data+="000";if(1e7>freq){data+="0"}data+=freq;port.send(data+";")});tcvr.bind(EventType.wpm,this.constructor.id,event=>port.send("KS0"+event.value+";"));tcvr.bind(EventType.filter,this.constructor.id,()=>{});tcvr.bind(EventType.preamp,this.constructor.id,event=>port.send("PA"+(event.value?"1":"0")+";"));tcvr.bind(EventType.attn,this.constructor.id,event=>port.send("RA0"+(event.value?"1":"0")+";"))}}class K2WebRTCPort{constructor(webrtc){this._webrtc=webrtc}_startPowerOnTimer(interval){this._timer=setInterval(()=>this.send("POWER1;"),interval)}send(data){this._webrtc.sendDirectlyToAll("meta","ctl",{msg:data})}disconnect(){clearInterval(this._timer);this.send("POWEROFF;");this._webrtc.disconnect()}}tcvrConnectors.register(new K2WebRTCConnector);